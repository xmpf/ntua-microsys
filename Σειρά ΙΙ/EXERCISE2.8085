; Microlab NTUA
; Exercise 2
; Michalis Papadopoullos 031-14702

	LXI B,03E8H		; (BE) = 0x03E8 = 1000

START:	LDA 2000H		; READ FROM INPUT
		RAL		; ROTATE ACCUMULATOR LEFT THROUGH CARRY
		JC START	; JUMP IF CARRY=1 =>> START

OFF_ON:	LDA 2000H	; SWITCH IS DOWN -- READ INPUT (CARRY = 0)
		RAL		; ROTATE ACCUMULATOR LEFT THROUGH CARRY
		JNC OFF_ON 	; IF (CARRY == 0) THEN SWITCH IS DOWN -- READ INPUT AGAIN

LED_ON:	LXI D,001EH	; (DE) = 0x001E = 30 -- COUNTER
		MVI A,00H 	; SET ALL BITS TO ZERO
		STA 3000H	; mLAB SHOULD TURN ALL LEDS ON

DELAY:	CALL DELB		; DELAY -- (BC) x 1msec -- (BC) = 1000
		DCR  E		; (DE) = 0x1E -- DECREMENT COUNTER
		MOV  A,E 	; COPY E TO A, TO COMPARE -- CPI
		CPI  00H 	; IF E = 0 THEN 30sec PASSED
		JZ  LED_OFF	; JUMP ON ZERO FLAG -- TURN OFF ALL LEDS
		; CHECK IF SWITCH HAS BEEN PRESSED DURING COUNTDOWN
		; IN THIS SCENARIO WE SHOULD RESET TIME_LEFT
		; CODES: {0x00 = SWITCH_UP, 0x01 = SWITCH_DOWN, 0x02 = SWITCH_UP_AFTER_DOWN}
		MOV A,D 		; MOVE D TO A -- USE D REGISTER TO DETERMINE THE STATE OF THE SWITCH
		CPI 00H 		; IS THE SWITCH UP ?
		JZ  SWITCH_UP
		CPI 01H 		; IS THE SWITCH DOWN ?
		JZ  SWITCH_DOWN
		CPI 02H		; UP AFTER DOWN ?
		JZ  UP_AFTER_DOWN

SWITCH_UP: 	LDA 2000H	; READ INPUT
		RAL 		; ROTATE ACCUMULATOR THROUGH CARRY
		JC 	DELAY	; JUMP ON CARRY -- MSB WAS 1 => PUSH_BUTTON IS PRESSED
		INR D 		; IF NOT PRESSED INCREMENT D

SWITCH_DOWN:  LDA 2000H	; READ INPUT
		RAL		; ROTATE ACCUMULATOR THROUGH CARRY
		JNC DELAY	; IF (CARRY == 0) GOTO DELAY -- PUSH_BUTTON IS NOT PRESSED
		INR D 		; INCREMENT D REGISTER


UP_AFTER_DOWN: LDA 2000H	; READ INPUT
		 RAL			; ROTATE ACCUMULATOR THROUGH CARRY
		 JC  LED_ON	; JUMP ON CARRY = 1 -- START COUNTDOWN AGAIN

LED_OFF: 	 MVI A,FFH		; SET ALL BITS TO 1
		 STA 3000H		; mLAB SHOULD TURN ALL LEDS OFF
		 JMP START		; UNCONDITIONAL JUMP -- START ROUTINE

END